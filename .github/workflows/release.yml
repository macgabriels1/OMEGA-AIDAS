name: Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags (more reliable than 'release: published')

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for proper tag detection

      - name: Verify Release Tag
        run: |
          echo "Release Tag: ${{ github.ref_name }}"
          if [[ ! "${{ github.ref_name }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(\.post[0-9]+)?$ ]]; then
            echo "::error::Invalid version tag format"
            exit 1
          fi

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip build twine
          pip install setuptools==68.0.0  # Pin setuptools for stability

      - name: Build distribution
        run: |
          python -m build --no-isolation
          ls -la dist/  # Debug: Verify built files

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            dist/*.whl
            dist/*.tar.gz
          generate_release_notes: true
          draft: false

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload --skip-existing dist/*
          echo "Published version: $(python setup.py --version)"

      - name: Verify Release Status
        run: |
          echo "GitHub Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}"
          curl -s \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref_name }}" \
            | jq -r '"Release state: " + (.state // "unknown")'
